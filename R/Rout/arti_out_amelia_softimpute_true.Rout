
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pckgs <- c("Amelia", "mice", "mi", "softImpute", "impute", "Hmisc",
+            "data.table", "parallel", "ggplot2", "simsalapar")
> loaded.pckgs <- lapply(pckgs, function(x) do.call(library, args=list(x)))
Loading required package: Rcpp
## 
## Amelia II: Multiple Imputation
## (Version 1.7.4, built: 2015-12-05)
## Copyright (C) 2005-2015 James Honaker, Gary King and Matthew Blackwell
## Refer to http://gking.harvard.edu/amelia/ for more information
## 
mice 2.25 2015-11-09
Loading required package: Matrix
Loading required package: stats4
mi (Version 1.0, packaged: 2015-04-16 14:03:10 UTC; goodrich)
mi  Copyright (C) 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015 Trustees of Columbia University
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under the General Public License version 2 or later.
Execute RShowDoc('COPYING') for details.

Attaching package: ‘mi’

The following objects are masked from ‘package:mice’:

    complete, pool

Loaded softImpute 1.4


Attaching package: ‘softImpute’

The following object is masked from ‘package:mi’:

    complete

The following object is masked from ‘package:mice’:

    complete

Loading required package: lattice
Loading required package: survival
Loading required package: Formula
Loading required package: ggplot2

Attaching package: ‘Hmisc’

The following object is masked from ‘package:softImpute’:

    impute

The following object is masked from ‘package:sfsmisc’:

    errbar

The following objects are masked from ‘package:base’:

    format.pval, round.POSIXt, trunc.POSIXt, units


Attaching package: ‘data.table’

The following object is masked from ‘package:sfsmisc’:

    last

> 
> 
> source('completion_fns.R')
> options(mc.cores=1)
> 
> set.seed(1)
> FLAS <- readRDS('../data/FLAS_clean.rds')
> FLAS_COMPLETE <- readRDS('../data/FLAS_complete_average.rds')
> # na.pattern(FLAS)
> 
> dataset <- FLAS_COMPLETE
> mt <- na.pattern(FLAS)
> column.type.mi <- list(grade_complete="ordered-categorical")
> 
> ## MCAR simulation data
> data.complete <- FLAS_COMPLETE[, -12] # Avoid problem of convergence with mi
> mt <- na.pattern(FLAS[, -12])
> n <- 5
> 
> ## Follow simsalapar
> source("varlist_fns.R")
> # imputation.methods <- c("softImpute", "impute.knn")
> imputation.methods <- c("amelia", "softImpute")
> varList <- varListProd(imputation.methods)
> 
> # varList <- varListProd()
> ## toLatex(varList)
> ## pGrid <- mkGrid(varList)
> 
> ## Have to redefine the impuationSimulation function the varList can only take
> ## grids
> doOne <- function(data.complete, missing.mechanism, imputation.method, p, n.imputation,
+                   imputation.args, missing.args, missing.random.seed){
+ 
+   # Stopping mechanism from MARFrequency
+   if (missing.mechanism == 'MARFrequency' & p > 0.3){
+     measures <- colnames(data.complete)
+     res <- rep(-1, length(measures))
+     names(res) <- measures
+     return(res)
+   }
+ 
+   miss.args <-
+     c(list(random.seed=missing.random.seed), missing.args[[missing.mechanism]])
+ 
+   ## arguments for the imputeDataFns
+   n.imputation.args <-
+     ifelse(!missing.mechanism %in% c('softImpute', 'impute.knn'),
+            list(n=n.imputation),
+            list())
+ 
+   if (is.null(imputation.args[[imputation.method]])) {
+     imp.args <- n.imputation.args
+   } else {
+     imp.args <- c(n.imputation.args, imputation.args[[imputation.method]])
+   }
+ 
+   imputationSimulation(as.data.frame(data.complete), missing.mechanism, imputation.method,
+                        p, miss.args, imp.args)
+ }
> 
> # sfile="imputation_lapply.rds"
> ## res <- doLapply(varList, doOne=doOne, monitor=interactive())
> 
> cl <- makeCluster(4, type="PSOCK")
> clusterExport(cl, "pckgs")
> clusterEvalQ(cl, {
+   source('completion_fns.R')
+   loaded.pckgs <- lapply(pckgs, function(x) do.call(library, args=list(x)))
+   0
+ })
[[1]]
[1] 0

[[2]]
[1] 0

[[3]]
[1] 0

[[4]]
[1] 0

> 
> sfile.path <- paste0("../simulation_rds/imputation_mc_",
+                      "2015120_2202_",
+                      paste0(imputation.methods, collapse='_'))
> 
> res <- doClusterApply(varList, cl,
+                       sfile=sfile.path,
+                       doOne=doOne)
-- Imputation 1 --

  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140
 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160
 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200
 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220
 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237
error: inv_sympd(): matrix appears to be singular
 238
error: inv_sympd(): matrix appears to be singular
 239 240
 241 242 243 244 245 246 247 248 249 250 251 252 253 254
error: inv_sympd(): matrix appears to be singular
 255 256 257 258 259 260
 261 262 263 264 265 266 267 268 269
error: inv_sympd(): matrix appears to be singular
 270
error: inv_sympd(): matrix appears to be singular
 271 272 273 274 275 276 277 278


The resulting variance matrix was not invertible.   Please check your data for highly collinear variables.

-- Imputation 2 --

  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140
 141

-- Imputation 3 --

  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140
 141 142 143 144 145 146 147 148 149 150 151 152

-- Imputation 4 --

  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140
 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160
 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200
 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220
 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240
 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260
 261 262 263 264 265 266 267 268 269 270 271 272 273 274


The resulting variance matrix was not invertible.   Please check your data for highly collinear variables.

-- Imputation 5 --

  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140
 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160
 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200
 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220
 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240
 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260
 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280
 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300
 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320
 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340
 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360
 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380
 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400
 401 402

sample 3611 gave error (that we caught): undefined columns selected
terminate called after throwing an instance of 'std::runtime_error'
  what():  chol(): decomposition failed
Error in unserialize(socklist[[n]]) : error reading from connection
Calls: doClusterApply ... recvOneData -> recvOneData.SOCKcluster -> unserialize
Execution halted
